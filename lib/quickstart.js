// Generated by CoffeeScript 1.3.3
(function() {
  var contacts, contactsNode, db, jsonDrop, schema, version;

  jsonDrop = JsonDrop.inMemory();

  db = jsonDrop.get('db');

  console.assert('db' === db.path);

  version = jsonDrop.get('db/version');

  version = db.child('version');

  version.set(0.1, function(err) {});

  version.get(function(err, val) {
    return console.assert(0.1 === val);
  });

  db.get(function(err, val) {
    return console.assert(!val);
  });

  version.remove(function(err) {
    return version.get(function(err, val) {
      return console.assert(!val);
    });
  });

  schema = db.child('schema');

  schema.set({
    contacts: ':Array'
  }, function(err) {});

  schema.get(function(err, val) {
    return console.log('scheme: ', val);
  });

  contacts = [];

  contacts.push({
    name: 'James',
    email: 'bondjamesbond@mi6.co.uk'
  });

  contacts.push({
    name: 'Ernst',
    email: 'blofeld@spectre.org'
  });

  contactsNode = db.child('contacts');

  contactsNode.set(contacts, function(err) {});

  contactsNode.get(function(err, val) {
    console.assert(val[0].name === 'James');
    return console.log('Arrays are retrieved as is', val);
  });

  contactsNode.push({
    name: 'Auric',
    email: 'goldfinger@smersh.org'
  }, function(err, child) {
    return console.log(child.path);
  });

  contactsNode.push({
    name: 'James',
    email: 'bondjamesbond@mi6.co.uk'
  }, function(err, child) {});

  contactsNode.each(function(item, child, index) {
    return console.log(child, " = contactsNode[" + index + "] = ", item);
  }, function(err) {
    if (err) {
      return alert(err);
    }
  });

  contactsNode.map(function(element) {
    return element.name;
  }, function(err, result) {
    if (err) {
      alert(err);
    }
    return console.log('contactsNode.map = ', result);
  });

  contactsNode.map(function(err, result) {
    if (err) {
      alert(err);
    }
    return console.log('contactsNode.map = ', result);
  });

}).call(this);
